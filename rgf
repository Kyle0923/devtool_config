#!/usr/bin/env bash

# adapted from https://github.com/junegunn/fzf/blob/master/ADVANCED.md#using-fzf-as-interactive-ripgrep-launcher

# interactive Ripgrep
# on 'Enter' open the file in Vim
# Switch between Ripgrep mode and fzf filtering mode (CTRL-T)

# usage:
# rgf [rg options] file search_words/regexes...

# known issue
# 1. appears to relate to nth=3.., when we search in fzf mode and then switch back to rg, if the regex is not found,
#    the search window doesn't display correctly. it appears fzf attempt to search through the 'not found' message. changing query will restore
# 2. ctrl-F no response, this can happen when the number of records is too large. Try to apply more fileters to reduce the searching pool


show_help() {
    cat << EOF
Interactive Ripgrep / FZF

usage: rgf [options] file search_words/regexes...  # both file and search_words/regexes are optional
       CMD | rgf [options]

options:
    -h|--help   display this help message
    -*|--*      rg supported options

key-bindings:
    ctrl+/      change preview window position or close it
    ctrl+t      toggle between rg and fzf
    ctrl+f      search in current mattching records, could fail if the number of records is too large
    enter       use 'less' to open the current record
    alt-enter   fzf's accept the current selections, i.e., print the selected records to CLI

EOF
    exit 0
}


RG_PREFIX="rg --line-number --no-heading --color=always --smart-case"
NOT_FOUND_PROMPT="echo '::[[ regex:/{q}/ not found ]]::'" # nth=3.. will fail without the first 2 colons, the last two just for symmetric
PRETTY_BAT='bat --color=always --terminal-width $(tput cols) --paging=always'
PIPE_BAT_OPT=''
PREVIEW_HEADER_LINE=',~3'
PATTERN_SETUP="PATTERN=\$([ -z {q} ] && echo '' || echo \"-p \$(echo '{q}' | awk '{print \$1}')\")"
PROMPT_SETUP="PROMPT=\$([[ \$FZF_PROMPT =~ 'rg>' ]] && echo 'rg:' || echo 'fzf:') "
PREFIX_SETUP="$PROMPT_SETUP ; new_prefix=\$([ -z \"{q}\" ] && echo '' || echo \"[{q}]\") ; echo \$PROMPT \"{q}\""
TRUNCATE_LINE="awk '{ if (length(\$0) > 201) print substr(\$0, 1, 201) \" [...]\"; else print \$0; }'"

# parse options
while [[ $# -gt 0 ]]; do
    case "$1" in
        -h|--help)
            show_help
            exit 0
            ;;
        --PASS-THROUGH)
            PASS_THROUGH_MODE=true
            shift
            ;;
        --PREFIX)
            prefix="$2 && "
            shift 2
            ;;
        -*)
            rg_opt="$1 '$2'"
            RG_PREFIX="$RG_PREFIX $rg_opt"
            shift 2
            ;;
        *)
            break
            ;;
    esac
done
set -- "$@"

main() {

    [ -f "$1" ] && file_path="'$1'" && shift

    rm -f /tmp/rg-fzf-{r,f}
    INITIAL_QUERY="${*:-}"
    : | fzf --ansi --query "$INITIAL_QUERY" \
        --layout=reverse-list \
        --exact --no-sort \
        --pointer='=>' \
        --marker='# ' \
        --multi \
        --nth=3.. \
        --bind "home:first" \
        --bind "end:last" \
        --bind 'ctrl-/:change-preview-window(right|up|hidden|)' \
        --bind "start:reload($RG_PREFIX {q} $file_path || $NOT_FOUND_PROMPT)+unbind(change)" \
        --bind "change:reload:sleep 0.1; $RG_PREFIX {q} $file_path || $NOT_FOUND_PROMPT" \
        --bind "ctrl-t:transform:[[ ! \$FZF_PROMPT =~ 'rg>' ]] &&
                echo \"rebind(change)+disable-search+reload($RG_PREFIX {q} $file_path || $NOT_FOUND_PROMPT)+change-prompt(${prefix}rg> )\" ||
                echo \"unbind(change)+reload($RG_PREFIX '' $file_path )+change-prompt(${prefix}fzf> )+enable-search\" " \
        --bind "ctrl-f:select-all+execute($PREFIX_SETUP ; printf '%s\n' {+} | rgf --PREFIX \"${prefix}\$new_prefix\" --PASS-THROUGH )+clear-selection" \
        --color "hl:-1:underline,hl+:-1:underline:reverse" \
        --prompt "${prefix}fzf> " \
        --delimiter : \
        --header 'CTRL-T: toggle rg/fzf, CTRL-F: nested search' \
        --preview "bat $PIPE_BAT_OPT --terminal-width \$FZF_PREVIEW_COLUMNS --color=always {1} --highlight-line {2} 2>/dev/null || fzf_previewer {}" \
        --preview-window "up,60%,border-bottom,wrap,+{2}+3/3$PREVIEW_HEADER_LINE" \
        --bind "enter:execute( [[ {} == \"\$($NOT_FOUND_PROMPT)\" ]] && exit 0 ; $PATTERN_SETUP ; \
                    $PRETTY_BAT {1} --highlight-line {2} --pager \"less -R +{2} \$PATTERN\" 2>/dev/null ; echo peek: {} | $TRUNCATE_LINE )" \
        --bind "alt-enter:execute(echo)+accept" \

        # --track # brokwn on fzf side, https://github.com/junegunn/fzf/issues/3681


}

if ! [ -p /dev/stdin ]; then

    # Run from cli
    [ -f "$1" ] && RG_PREFIX="$RG_PREFIX --with-filename"
    main "$@"

else

    # Run from pipeline
    TEMP_FILE="/tmp/rg-fzf-pipe-$$"
    rm -f $TEMP_FILE
    cat > $TEMP_FILE

    if [[ "$PASS_THROUGH_MODE" == true ]]; then
        # run in nested search mode
        RG_PREFIX="$RG_PREFIX --no-filename --no-heading --no-line-number"
    else
        # top level input is from pipe
        PIPE_BAT_OPT="$PIPE_BAT_OPT --style=grid,numbers"
        PREVIEW_HEADER_LINE=''
        RG_PREFIX="$RG_PREFIX --with-filename"
    fi

    main $TEMP_FILE "$@"
    rm -f $TEMP_FILE

fi

