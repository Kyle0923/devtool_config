#!/usr/bin/env bash

# adapted from https://github.com/junegunn/fzf/blob/master/ADVANCED.md#using-fzf-as-interactive-ripgrep-launcher

# interactive Ripgrep
# on 'Enter' open the file in Vim
# Switch between Ripgrep mode and fzf filtering mode (CTRL-T)

# usage:
# rgf [file] [regex]

# known issue
# 1. appears to relate to nth=3.., when we search in fzf mode and then switch back to rg, if the regex is not found,
#    the search window doesn't display correctly. it appears fzf attempt to search through the 'not found' message. changing query will restore

if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    echo "usage: rgf [file] [regex]  # both params are optional"
    echo "reading from pipe is supported though not recommanded for large input"
    echo
    echo "Interactive Ripgrep / FZF"
    echo
    exit 0
fi

RG_PREFIX="rg --line-number --no-heading --color=always --smart-case"
NOT_FOUND_PROMPT="echo '::[[ regex:/{q}/ not found ]]::'" # nth=3.. will fail without the first 2 colons, the last two just for symmetric
PRETTY_BAT='bat --color=always --terminal-width $(tput cols) --paging=always'
PATTERN_SETUP="PATTERN=\$([ -z {q} ] && echo '' || echo \"-p \$(echo '{q}' | awk '{print \$1}')\")"
PROMPT_SETUP="PROMPT=\$([[ \$FZF_PROMPT =~ 'rg>' ]] && echo 'rg:' || echo 'fzf:') "
PREFIX_SETUP="$PROMPT_SETUP ; new_prefix=\$([ -z \"{q}\" ] && echo '' || echo \"[{q}]\") ; echo \$PROMPT \"{q}\""
TRUNCATE_LINE="awk '{ if (length(\$0) > 201) print substr(\$0, 1, 201) \" [...]\"; else print \$0; }'"

function main() {

    [ -f "$1" ] && file_path="'$1'" && shift
    [[ -n "$1" && "$1" == '--pre' ]] && prefix="$2 && " && shift && shift

    rm -f /tmp/rg-fzf-{r,f}
    INITIAL_QUERY="${*:-}"
    : | fzf --ansi --query "$INITIAL_QUERY" \
        --layout=reverse-list \
        --exact --track --no-sort \
        --pointer='=>' \
        --marker='# ' \
        --multi \
        --nth=3.. \
        --bind 'ctrl-/:change-preview-window(right|up|hidden|)' \
        --bind "start:reload($RG_PREFIX {q} $file_path || $NOT_FOUND_PROMPT)+unbind(change)" \
        --bind "change:reload:sleep 0.1; $RG_PREFIX {q} $file_path || $NOT_FOUND_PROMPT" \
        --bind "ctrl-t:transform:[[ ! \$FZF_PROMPT =~ 'rg>' ]] &&
                echo \"rebind(change)+disable-search+reload($RG_PREFIX {q} $file_path || $NOT_FOUND_PROMPT)+change-prompt(${prefix}rg> )\" ||
                echo \"unbind(change)+reload($RG_PREFIX '' $file_path )+change-prompt(${prefix}fzf> )+enable-search\" " \
        --bind "ctrl-f:select-all+execute($PREFIX_SETUP ; printf '%s\n' {+} | rgf --pre \"${prefix}\$new_prefix\")+clear-selection" \
        --color "hl:-1:underline,hl+:-1:underline:reverse" \
        --prompt "${prefix}fzf> " \
        --delimiter : \
        --header 'CTRL-T: Switch between rg/fzf' \
        --preview 'bat --terminal-width $FZF_PREVIEW_COLUMNS --color=always {1} --highlight-line {2} 2>/dev/null || echo [empty]' \
        --preview-window 'up,60%,border-bottom,wrap,+{2}+3/3,~3' \
        --bind "enter:execute( $PATTERN_SETUP ; $PRETTY_BAT {1} --highlight-line {2} --pager \"less -R +{2} \$PATTERN\" ; echo peek: {} | $TRUNCATE_LINE )" \
        --bind "alt-enter:execute(echo)+accept" \


}

if ! [ -p /dev/stdin ]; then

    # Run from cli
    main $@

else

    # Run from pipeline
    TEMP_FILE="/tmp/rg-fzf-pipe-tmp"
    rm -f $TEMP_FILE
    cat > $TEMP_FILE
    RG_PREFIX="$RG_PREFIX --no-filename --no-heading --no-line-number"
    main $TEMP_FILE "$@"

fi

